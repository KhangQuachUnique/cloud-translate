// Chuy·ªÉn ƒë·ªïi gi·ªØa c√°c tab
function showTab(tabName) {
  // ·∫®n t·∫•t c·∫£ tab content
  document.querySelectorAll(".tab-content").forEach((tab) => {
    tab.classList.remove("active");
  });

  // B·ªè active t·∫•t c·∫£ tab button
  document.querySelectorAll(".tab-btn").forEach((btn) => {
    btn.classList.remove("active");
  });

  // Hi·ªán tab ƒë∆∞·ª£c ch·ªçn
  if (tabName === "text") {
    document.getElementById("text-tab").classList.add("active");
    document.querySelectorAll(".tab-btn")[0].classList.add("active");
  } else {
    document.getElementById("image-tab").classList.add("active");
    document.querySelectorAll(".tab-btn")[1].classList.add("active");
  }

  // ·∫®n k·∫øt qu·∫£ c≈©
  hideResults();
}

// H√†m load danh s√°ch ng√¥n ng·ªØ t·ª´ AWS
async function loadLanguages() {
  try {
    console.log("üîÑ ƒêang t·∫£i danh s√°ch ng√¥n ng·ªØ...");
    const response = await fetch("/languages");
    const data = await response.json();

    if (data.languages) {
      console.log(`‚úÖ ƒê√£ t·∫£i ${data.languages.length} ng√¥n ng·ªØ`);

      // Populate t·∫•t c·∫£ c√°c select boxes
      const selects = [
        document.getElementById("sourceLang"),
        document.getElementById("targetLang"),
        document.getElementById("imageSourceLang"),
        document.getElementById("imageTargetLang"),
      ];

      selects.forEach((select, index) => {
        // X√≥a options c≈©
        select.innerHTML = "";

        // Th√™m option "T·ª± ƒë·ªông nh·∫≠n di·ªán" cho source language (index 0 v√† 2)
        if (index === 0 || index === 2) {
          const autoOption = document.createElement("option");
          autoOption.value = "auto";
          autoOption.textContent = "üîç T·ª± ƒë·ªông nh·∫≠n di·ªán";
          select.appendChild(autoOption);
        }

        // Th√™m options ng√¥n ng·ªØ t·ª´ AWS
        data.languages.forEach((lang) => {
          const option = document.createElement("option");
          option.value = lang.code;
          option.textContent = `${lang.name} (${lang.code})`;
          select.appendChild(option);
        });
      });

      // Set gi√° tr·ªã m·∫∑c ƒë·ªãnh
      document.getElementById("sourceLang").value = "auto";
      document.getElementById("targetLang").value = "vi";
      document.getElementById("imageSourceLang").value = "auto";
      document.getElementById("imageTargetLang").value = "vi";
    }
  } catch (error) {
    console.error("‚ùå L·ªói khi t·∫£i ng√¥n ng·ªØ:", error);
    showError("Kh√¥ng th·ªÉ t·∫£i danh s√°ch ng√¥n ng·ªØ t·ª´ AWS");
  }
}

// ·∫®n t·∫•t c·∫£ k·∫øt qu·∫£ v√† error
function hideResults() {
  document.getElementById("textResult").style.display = "none";
  document.getElementById("imageResult").style.display = "none";
  document.getElementById("errorMessage").style.display = "none";
}

// Hi·ªÉn th·ªã loading
function showLoading() {
  document.getElementById("loading").style.display = "block";
  hideResults();
}

// ·∫®n loading
function hideLoading() {
  document.getElementById("loading").style.display = "none";
}

// Hi·ªÉn th·ªã l·ªói
function showError(message) {
  const errorDiv = document.getElementById("errorMessage");
  errorDiv.textContent = "‚ùå L·ªói: " + message;
  errorDiv.style.display = "block";
  hideLoading();
}

// Preview ·∫£nh tr∆∞·ªõc khi upload
function previewImage() {
  const input = document.getElementById("imageInput");
  const preview = document.getElementById("imagePreview");
  const img = document.getElementById("previewImg");

  if (input.files && input.files[0]) {
    const reader = new FileReader();

    reader.onload = function (e) {
      img.src = e.target.result;
      preview.style.display = "block";
    };

    reader.readAsDataURL(input.files[0]);
  }
}

// D·ªãch vƒÉn b·∫£n
async function translateText() {
  // L·∫•y d·ªØ li·ªáu t·ª´ form
  const text = document.getElementById("textInput").value.trim();
  const sourceLang = document.getElementById("sourceLang").value;
  const targetLang = document.getElementById("targetLang").value;

  // Ki·ªÉm tra input
  if (!text) {
    showError("Vui l√≤ng nh·∫≠p vƒÉn b·∫£n c·∫ßn d·ªãch!");
    return;
  }

  if (!targetLang) {
    showError("Vui l√≤ng ch·ªçn ng√¥n ng·ªØ ƒë√≠ch!");
    return;
  }

  if (sourceLang === targetLang && sourceLang !== "auto") {
    showError("Ng√¥n ng·ªØ ngu·ªìn v√† ƒë√≠ch kh√¥ng th·ªÉ gi·ªëng nhau!");
    return;
  }

  // Hi·ªán loading
  showLoading();

  try {
    // G·ªçi API
    const response = await fetch("/translate-text", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        text: text,
        sourceLang: sourceLang,
        targetLang: targetLang,
      }),
    });

    const data = await response.json();

    // X·ª≠ l√Ω k·∫øt qu·∫£
    if (response.ok) {
      // Hi·ªÉn th·ªã k·∫øt qu·∫£ d·ªãch
      document.getElementById("translatedText").textContent =
        data.translatedText;
      
      // N·∫øu d√πng auto-detect, hi·ªÉn th·ªã ng√¥n ng·ªØ ƒë√£ nh·∫≠n di·ªán ƒë∆∞·ª£c
      if (sourceLang === "auto" && data.detectedLanguage) {
        const langInfo = document.createElement("div");
        langInfo.style.marginBottom = "10px";
        langInfo.style.color = "#8b4513";
        langInfo.style.fontWeight = "bold";
        langInfo.innerHTML = `üîç Ng√¥n ng·ªØ ph√°t hi·ªán: ${data.detectedLanguage}`;
        
        const resultBox = document.getElementById("textResult");
        const translatedDiv = document.getElementById("translatedText");
        translatedDiv.parentNode.insertBefore(langInfo, translatedDiv);
      }
      
      document.getElementById("textResult").style.display = "block";
    } else {
      showError(data.error || "C√≥ l·ªói x·∫£y ra khi d·ªãch vƒÉn b·∫£n");
    }
  } catch (error) {
    showError("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server: " + error.message);
  } finally {
    hideLoading();
  }
}

// D·ªãch ·∫£nh
async function translateImage() {
  // L·∫•y file ·∫£nh
  const input = document.getElementById("imageInput");
  const sourceLang = document.getElementById("imageSourceLang").value;
  const targetLang = document.getElementById("imageTargetLang").value;

  // Ki·ªÉm tra input
  if (!input.files || !input.files[0]) {
    showError("Vui l√≤ng ch·ªçn ·∫£nh!");
    return;
  }

  if (!targetLang) {
    showError("Vui l√≤ng ch·ªçn ng√¥n ng·ªØ ƒë√≠ch!");
    return;
  }

  if (sourceLang === targetLang && sourceLang !== "auto") {
    showError("Ng√¥n ng·ªØ ngu·ªìn v√† ƒë√≠ch kh√¥ng th·ªÉ gi·ªëng nhau!");
    return;
  }

  // Hi·ªán loading
  showLoading();

  try {
    // T·∫°o FormData ƒë·ªÉ g·ª≠i file
    const formData = new FormData();
    formData.append("image", input.files[0]);
    formData.append("sourceLang", sourceLang);
    formData.append("targetLang", targetLang);

    // G·ªçi API
    const response = await fetch("/translate-image", {
      method: "POST",
      body: formData,
    });

    const data = await response.json();

    // X·ª≠ l√Ω k·∫øt qu·∫£
    if (response.ok) {
      if (data.message) {
        // Kh√¥ng ph√°t hi·ªán text
        showError(data.message);
      } else {
        // Hi·ªán k·∫øt qu·∫£ text g·ªëc
        document.getElementById("originalText").textContent =
          data.originalText || "(Kh√¥ng c√≥ text)";
        
        // Hi·ªán k·∫øt qu·∫£ d·ªãch
        document.getElementById("translatedImageText").textContent =
          data.translatedText || "(Kh√¥ng c√≥ b·∫£n d·ªãch)";
        
        // N·∫øu d√πng auto-detect, hi·ªÉn th·ªã ng√¥n ng·ªØ ƒë√£ nh·∫≠n di·ªán
        const imageResultDiv = document.getElementById("imageResult");
        if (sourceLang === "auto" && data.detectedLanguage) {
          const langInfo = document.createElement("div");
          langInfo.style.marginBottom = "10px";
          langInfo.style.color = "#8b4513";
          langInfo.style.fontWeight = "bold";
          langInfo.innerHTML = `üîç Ng√¥n ng·ªØ ph√°t hi·ªán: ${data.detectedLanguage}`;
          
          const translatedDiv = document.getElementById("translatedImageText");
          translatedDiv.parentNode.insertBefore(langInfo, translatedDiv);
        }
        
        imageResultDiv.style.display = "block";
      }
    } else {
      showError(data.error || "C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω ·∫£nh");
    }
  } catch (error) {
    showError("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server: " + error.message);
  } finally {
    hideLoading();
  }
}

// X·ª≠ l√Ω ph√≠m Enter trong textarea
document.addEventListener("DOMContentLoaded", function () {
  // Load danh s√°ch ng√¥n ng·ªØ khi trang load xong
  loadLanguages();

  const textInput = document.getElementById("textInput");

  textInput.addEventListener("keydown", function (e) {
    // Ctrl + Enter ƒë·ªÉ d·ªãch
    if (e.ctrlKey && e.key === "Enter") {
      e.preventDefault();
      translateText();
    }
  });
});
